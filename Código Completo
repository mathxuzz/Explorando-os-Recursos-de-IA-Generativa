import openai
import json

# Configuração da chave de API
openai.api_key = 'sua-chave-de-api-aqui'  # Substitua pela sua chave de API

# Função para gerar texto usando a API da OpenAI
def gerar_texto(prompt):
    response = openai.Completion.create(
        engine="text-davinci-003",  # Escolha o modelo adequado
        prompt=prompt,
        max_tokens=150,  # Limite de tokens na resposta
        n=1,  # Número de respostas a serem geradas
        stop=None,  # Parar a geração em um determinado ponto
        temperature=0.7  # Controla a criatividade da resposta
    )
    return response.choices[0].text.strip()

# Função para moderar conteúdo usando a API de Moderação da OpenAI
def moderar_conteudo(texto):
    response = openai.Moderation.create(
        input=texto
    )
    return response['results'][0]

# Função para criar um chatbot com filtros de conteúdo
def chatbot():
    print("Bem-vindo ao Chatbot! Digite 'sair' para encerrar.")
    while True:
        user_input = input("Você: ")
        if user_input.lower() == 'sair':
            break
        
        # Moderar a entrada do usuário
        moderacao = moderar_conteudo(user_input)
        if moderacao['flagged']:
            print("Bot: Desculpe, não posso responder a isso.")
            continue
        
        # Gerar resposta
        resposta = gerar_texto(user_input)
        
        # Moderar a resposta gerada
        moderacao_resposta = moderar_conteudo(resposta)
        if moderacao_resposta['flagged']:
            print("Bot: Desculpe, não posso fornecer uma resposta para isso.")
            continue
        
        print(f"Bot: {resposta}")

# Função para gerar poesias
def gerar_poesia(tema):
    prompt = f"Escreva uma poesia sobre {tema}."
    return gerar_texto(prompt)

# Função para salvar dados em um arquivo JSON
def salvar_dados(dados, arquivo):
    with open(arquivo, 'w') as f:
        json.dump(dados, f)

# Função para carregar dados de um arquivo JSON
def carregar_dados(arquivo):
    with open(arquivo, 'r') as f:
        return json.load(f)

# Menu principal do LAB
def menu():
    while True:
        print("\n--- MENU PRINCIPAL ---")
        print("1. Iniciar Chatbot")
        print("2. Gerar Poesia")
        print("3. Salvar Dados")
        print("4. Carregar Dados")
        print("5. Sair")
        escolha = input("Escolha uma opção: ")

        if escolha == '1':
            chatbot()
        elif escolha == '2':
            tema = input("Digite o tema da poesia: ")
            poesia = gerar_poesia(tema)
            print("\nPoesia Gerada:")
            print(poesia)
        elif escolha == '3':
            dados = {"conversa": "exemplo de conversa"}  # Substitua por dados reais
            arquivo = input("Digite o nome do arquivo para salvar (ex: dados.json): ")
            salvar_dados(dados, arquivo)
            print(f"Dados salvos em {arquivo}.")
        elif escolha == '4':
            arquivo = input("Digite o nome do arquivo para carregar (ex: dados.json): ")
            dados_carregados = carregar_dados(arquivo)
            print("\nDados Carregados:")
            print(dados_carregados)
        elif escolha == '5':
            print("Encerrando o programa...")
            break
        else:
            print("Opção inválida. Tente novamente.")

# Executar o menu principal
if __name__ == "__main__":
    menu()
